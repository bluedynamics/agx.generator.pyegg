Test agx.generator.pyegg
========================

Setup configuration and emulate main routine.
::

    >>> from zope.configuration.xmlconfig import XMLConfig
    >>> import agx.generator.pyegg.tests
    >>> XMLConfig('configure.zcml', agx.generator.pyegg.tests)()
    
    >>> import agx.core
    >>> XMLConfig('configure.zcml', agx.core)()
    
    >>> from agx.core.main import parse_options
    
    >>> import os
    >>> modelpath = os.path.join(datadir, 'agx.testpackage.uml')
    >>> profilepath = os.path.join(datadir, '..', '..',
    ...                            'profiles', 'pyegg.profile.uml')
    >>> modelpaths = [modelpath, profilepath]
    >>> outdir = os.path.join(datadir, 'agx.testpackage')
    >>> controller = agx.core.Controller()
    >>> target = controller(modelpaths, outdir)
    >>> target
    <node.ext.directory.directory.Directory object at ...>
    
    >> target.printtree()
    <class 'node.ext.directory.directory.Directory'>: .../src/agx/generator/pyegg/tests/data/agx.testpackage
      <class 'node.ext.directory.directory.Directory'>: src
        <class 'node.ext.directory.directory.Directory'>: agx
          <class 'node.ext.python.nodes.Module'>: [?:?] - -1
            <class 'node.ext.python.nodes.Block'>: [?:?] - 0
          <class 'node.ext.directory.directory.Directory'>: testpackage
            <class 'node.ext.python.nodes.Module'>: [?:?] - -1
              <class 'node.ext.python.nodes.Block'>: [?:?] - 0
            <class 'node.ext.directory.directory.Directory'>: somepackage
              <class 'node.ext.python.nodes.Module'>: [?:?] - -1
                <class 'node.ext.python.nodes.Block'>: [?:?] - 0
              <class 'node.ext.python.nodes.Module'>: [?:?] - -1
                <class 'node.ext.python.nodes.Block'>: [?:?] - 0
                <class 'node.ext.python.nodes.Import'>: [?:?] - 0
                <class 'node.ext.python.nodes.Class'>: [?:?] - 0
                  <class 'node.ext.python.nodes.Attribute'>: [?:?] - 1
                  <class 'node.ext.python.nodes.Attribute'>: [?:?] - 1
                  <class 'node.ext.python.nodes.Function'>: [?:?] - 1
                    <class 'node.ext.python.nodes.Decorator'>: [?:?] - 1
                  <class 'node.ext.python.nodes.Function'>: [?:?] - 1
                    <class 'node.ext.python.nodes.Decorator'>: [?:?] - 1
                  <class 'node.ext.python.nodes.Function'>: [?:?] - 1
                    <class 'node.ext.python.nodes.Decorator'>: [?:?] - 1
                  <class 'node.ext.python.nodes.Function'>: [?:?] - 1
            <class 'node.ext.python.nodes.Module'>: [?:?] - -1
              <class 'node.ext.python.nodes.Block'>: [?:?] - 0
              <class 'node.ext.python.nodes.Import'>: [?:?] - 0
              <class 'node.ext.python.nodes.Class'>: [?:?] - 0
              <class 'node.ext.python.nodes.Class'>: [?:?] - 0
                <class 'node.ext.python.nodes.Decorator'>: [?:?] - 0
              <class 'node.ext.python.nodes.Class'>: [?:?] - 0
      <class 'node.ext.template._api.JinjaTemplate'>: setup.py